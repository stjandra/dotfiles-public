###########
# Options #
###########

# Get the options: "tmux show -g"
# Print variable : "tmux display-message -p "#{window-status-format}.""

# vi in command prompt.
set -g status-keys vi

# vi in copy mode.
setw -g mode-keys vi

# Mouse scrolling.
set -g mouse on

# Highlight windows with activity in the status bar.
setw -g monitor-activity off

set -g history-limit 10000

# No delay for escape key press.
set -sg escape-time 0

# Max length of left side of the status bar.
set -g status-left-length 20

# Set terminal title.
set-option -g set-titles on

# From https://superuser.com/a/430840
# Set window title string
#  #H  Hostname of local host
#  #I  Current window index
#  #P  Current pane index
#  #S  Session name
#  #T  Current window title
#  #W  Current window name
#  #   A literal â€˜#â€™
set -g set-titles-string '#S'

# Starts window numbering from 1.
set -g base-index 1

# Starts pane numbering from 1.
setw -g pane-base-index 1

# Resize window based on the session that has that as a current window,
# rather than the session it is attached.
setw -g aggressive-resize on

# True colors
# https://github.com/tmux/tmux/issues/1246#issue-292083184
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"

set-option -g status-left " #{session_name} "

set-option -g status-right " #{?window_bigger,[#{window_offset_x}#,#{window_offset_y}] ,}#{=45:pane_title} "
set-option -g status-right-length 50

set -g status-justify absolute-centre

set-window-option -g window-status-format " #I:#W#{?window_flags,#{window_flags}, } "
set-window-option -g window-status-current-format " #I:#W#{?window_flags,#{window_flags}, } "
set-window-option -g window-status-separator ""

# The following line could be changed by ~/git/scripts-public/change_theme
# Please be careful when changing
run "change_theme_tmux macchiato"

################
# Key Bindings #
################

# Rebind prefix from 'C-b' to 'C-a'.
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Bind split window to | and -. Open in current directory.
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"



# From https://github.com/aserowy/tmux.nvim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'

bind-key -T copy-mode-vi M-h resize-pane -L 1
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 1



# prefix + C-hjkl to send actual C-hjkl
bind C-h send-keys C-h
bind C-j send-keys C-j
bind C-k send-keys C-k
bind C-l send-keys C-l

# >/< to swap current pane with the next/previous one.
# -r to allow repeat without prefix key.
bind -r > swap-pane -D
bind -r < swap-pane -U

# Shift left/right arrow (without prefix) to switch windows.
bind -n S-Left  previous-window
bind -n S-Right next-window

# Also C-p/C-n to switch windows.
bind C-p previous-window
bind C-n next-window

# left/right arrow to swap window (without changing focus) with the next/previous one.
bind-key -r Left swap-window -d -t -
bind-key -r Right swap-window -d -t +

# Tab to move to last active window.
bind Tab last-window

# Copy mode.
set -s set-clipboard off
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle

# Reload config file.
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# Display popup
bind C-t display-popup

# Display popup to create and switch tmux session
# tmux_session is a script in https://github.com/stjandra/scripts-public
bind C-s display-popup -E "tmux_session $HOME/.config/my-work/tmux_session.csv"

######################
# OS Specific Config #
######################

# Copied from https://superuser.com/a/539657
if-shell "uname | grep -q Darwin" "source-file $HOME/.config/my-tmux/.tmux-macos.conf" "source-file $HOME/.config/my-tmux/.tmux-linux.conf"

###########
# Plugins #
###########

# Key bindings.
# prefix + I        Installs new plugins.
# prefix + U        Updates plugins.
# prefix + alt + u  Removes/uninstalls plugins not on the list.

# List of plugins.
#set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-sensible'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf).
#run '~/.tmux/plugins/tpm/tpm'
